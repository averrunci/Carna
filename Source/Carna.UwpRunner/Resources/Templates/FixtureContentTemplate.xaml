<!--
Copyright (C) 2017 Fievus

This software may be modified and distributed under the terms
of the MIT license.  See the LICENSE file for details.
-->
<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:u="using:Fievus.Windows.Mvc">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="../Styles/FixtureContentStyle.xaml"/>
    </ResourceDictionary.MergedDictionaries>
    
    <DataTemplate x:Key="FixtureContent">
        <UserControl Name="Root">
            <u:UwpController.Controllers>
                <u:UwpController ControllerType="Carna.UwpRunner.FixtureContentController,Carna.UwpRunner"/>
            </u:UwpController.Controllers>

            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>

                <Grid Grid.Row="0"
                      Style="{StaticResource HeaderGridStyle}"
                      BorderBrush="{Binding Status.Value, Converter={StaticResource FixtureStatusBrushConverter}}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>

                    <Grid Grid.Column="0"
                          Style="{StaticResource StatusGridStyle}">
                        <Ellipse Name="StatusEllipse"
                                 Style="{StaticResource StatusEllipseStyle}"
                                 Fill="{Binding Status.Value, Converter={StaticResource FixtureStatusBrushConverter}}"
                                 Visibility="{Binding IsFixtureStatusVisible.Value, Converter={StaticResource BooleanVisibilityConverter}}"/>
                        <TextBlock Style="{StaticResource ChildOpenTextBlockStyle}"
                                   Text="{Binding IsChildOpen.Value, Converter={StaticResource BooleanChildOpenStringRepresentationConverter}}"
                                   Visibility="{Binding IsChildOpenTextVisible.Value, Converter={StaticResource BooleanVisibilityConverter}}"/>
                        <ProgressRing IsActive="{Binding IsFixtureRunning.Value}"/>
                    </Grid>

                    <TextBlock Grid.Column="1"
                               Style="{StaticResource DescriptionTextBlockStyle}"
                               Text="{Binding Description.Value}"/>
                </Grid>

                <StackPanel Grid.Row="1"
                            Visibility="{Binding IsChildOpen.Value, Converter={StaticResource BooleanVisibilityConverter}}">
                    <Grid Style="{StaticResource ExceptionGridStyle}"
                          Visibility="{Binding Exception.Value, Converter={StaticResource ExceptionVisibilityConverter}}">
                        <TextBlock Style="{StaticResource ExceptionTextBlockStyle}"
                                   Text="{Binding Exception.Value}"/>
                    </Grid>

                    <StackPanel>
                        <ItemsControl Style="{StaticResource FixtureStepItemsControlStyle}"
                                      ItemsSource="{Binding Steps}"
                                      ItemTemplateSelector="{StaticResource DefaultDataTemplateSelector}"/>

                        <ItemsControl Style="{StaticResource ChildFixtureItemsControlStyle}"
                                      ItemsSource="{Binding Fixtures}"
                                      ItemTemplateSelector="{StaticResource DefaultDataTemplateSelector}"/>
                    </StackPanel>
                </StackPanel>

                <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup x:Name="StatusState">
                        <VisualState x:Name="PointerEntered">
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetName="StatusEllipse"
                                                 Storyboard.TargetProperty="Width"
                                                 EnableDependentAnimation="True"
                                                 To="35" Duration="0:0:0.1"/>
                                <DoubleAnimation Storyboard.TargetName="StatusEllipse"
                                                 Storyboard.TargetProperty="Height"
                                                 EnableDependentAnimation="True"
                                                 To="35" Duration="0:0:0.1"/>
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="PointerExited">
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetName="StatusEllipse"
                                                 Storyboard.TargetProperty="Width"
                                                 EnableDependentAnimation="True"
                                                 To="30" Duration="0:0:0.2"/>
                                <DoubleAnimation Storyboard.TargetName="StatusEllipse"
                                                 Storyboard.TargetProperty="Height"
                                                 EnableDependentAnimation="True"
                                                 To="30" Duration="0:0:0.2"/>
                            </Storyboard>
                        </VisualState>
                    </VisualStateGroup>
                </VisualStateManager.VisualStateGroups>
            </Grid>
        </UserControl>
    </DataTemplate>
</ResourceDictionary>
